version: "3"

services:
  api_server:
    image: minik8s.xyz/api_server:latest
    container_name: api_server
    ports:
      - "8080:8080"
    environment:
      - "ETCD_ENDPOINT=${ETCD_ENDPOINT}"
      - "METRICS_SERVER=prometheus:9090"
    depends_on:
      - prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    # TODO: add config
  endpoints-controller:
    image: minik8s.xyz/endpoints-controller:latest
    container_name: endpoints-controller
    environment:
      - API_SERVER_ENDPOINT=http://api_server:8080
    depends_on:
      - api_server
  ingress-controller:
    image: minik8s.xyz/ingress-controller:latest
    container_name: ingress
    environment:
      - API_SERVER_ENDPOINT=http://api_server:8080
    ports:
      - "8081:80"
    depends_on:
      - api_server
  replicaset-controller:
    image: minik8s.xyz/replicaset-controller:latest
    container_name: replicaset-controller
    environment:
      - API_SERVER_URL=http://api_server:8080
      - API_SERVER_WATCH_URL=ws://api_server:8080
    depends_on:
      - api_server
  # podautoscalar:
  #   image: minik8s.xyz/podautoscalar:latest
  #   container_name: podautoscalar
  #   environment:
  #     - API_SERVER_URL=http://api_server:8080
  #     - API_SERVER_WATCH_URL=ws://api_server:8080
  # scheduler

networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: "${FLANNEL_SUBNET}"
